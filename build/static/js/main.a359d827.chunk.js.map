{"version":3,"sources":["components/Header/index.js","components/BudgetTotals/index.js","components/SpendingTable/index.js","components/Row/index.js","components/Col/index.js","components/Container/index.js","components/AddForm/index.js","components/SectionBreak/index.js","components/SectionSpacing/index.js","components/Footer/index.js","App.js","index.js"],"names":["Header","className","BudgetTotals","expenses","expenseCount","length","expenseTotalCost","i","cost","amount","parseFloat","finalCost","toFixed","SpendingTable","handleClearExpenses","map","expense","key","name","date","onClick","class","Row","props","fluid","Col","size","split","join","Container","AddForm","handleDate","handleName","handleAmount","handleSubmitForm","onSubmit","type","placeholder","id","value","onChange","SectionBreak","SectionSpacing","Footer","href","allExpenses","localStorage","getItem","JSON","parse","App","useState","setExpenses","setDate","setName","setAmount","useEffect","setItem","stringify","event","target","preventDefault","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a359d827.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"jumbotron-text\">Expense Tracker <i className=\"fas fa-comment-dollar\"></i></h1>\n        <p>here to help you quickly calculate how much you just spent on your latest shopping spree</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\n// ==============================================================================\n\nfunction BudgetTotals({ expenses }) {\n  const expenseCount = expenses.length;\n\n  let expenseTotalCost = 0;\n\n  // convert all of the expense amounts (costs) from strings to numbers\n  for (var i = 0; i < expenses.length; i++) {\n    var cost = expenses[i].amount;\n    // add them together; will be rounded later...\n    expenseTotalCost += parseFloat(cost);\n  };\n\n  // round the cost to two decimal places (for some reason, this is necessary)\n  var finalCost = expenseTotalCost.toFixed(2);\n\n  if (expenses.length > 0) {\n  return (\n    <div>\n      <h3 className=\"total-expenses-header\">Total Spending:</h3>\n      <div className=\"budget-totals-container\">\n        <div className=\"expense-total\">\n          <h6>Total # of Expenses:</h6>\n          <h2 className=\"expense-number\">{expenseCount}</h2>\n        </div>\n        <div className=\"cost-total\">\n          <h6>Total Cost:</h6>\n          <h2 className=\"cost-number\">${finalCost}</h2>\n        </div>\n      </div>\n    </div>\n  );\n  } else {\n    return (\n      <div>\n        <h3 className=\"total-expenses-header\">Total Spending:</h3>\n        <p>no recent purchases</p>\n      </div>\n    );\n  }\n}\n\n// ==============================================================================\n\nexport default BudgetTotals;\n","import React from \"react\";\nimport \"./style.css\";\n\n// ==============================================================================\n\nfunction SpendingTable({ expenses, handleClearExpenses }) {\n  // if there are expenses in storage...\n  if (expenses.length > 0) {\n    // render all of the expenses\n    return (\n      <div>\n        <h3 className=\"recent-spending-header\">Recent Purchases:</h3>\n        <ul className=\"list\">\n          {expenses.map((expense) => (\n            <li className=\"expense-item\" key={expense.name}>\n              <span>{expense.date}</span> <span>{expense.name}</span>{\" \"}\n              <span>${expense.amount}</span>\n            </li>\n          ))}\n        </ul>\n        <button\n          onClick={handleClearExpenses}\n          className=\"btn btn-danger clear-button\"\n        >\n          Clear Expenses <i class=\"fas fa-trash-alt\"></i>\n        </button>\n      </div>\n    );\n    // otherwise, if there are no expenses...\n  } else {\n    return (\n      <div>\n        <h3 className=\"recent-spending-header\">Recent Purchases:</h3>\n        <p>no recent purchases</p>\n      </div>\n    );\n  }\n}\n\n// ==============================================================================\n\nexport default SpendingTable;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size} {...props} />;\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Container;\n","import React from \"react\";\nimport Row from \"../Row\";\nimport Col from \"../Col\";\nimport Container from \"../Container\";\nimport \"./style.css\";\n\n// ==============================================================================\n\nfunction AddForm({ date, name, amount, handleDate, handleName, handleAmount, handleSubmitForm }) {\n  return (\n    <Container onSubmit={handleSubmitForm}>\n      <h3 className=\"add-form-header\">Add Expense:</h3>\n      <form>\n        <Row>\n        <Col size=\"3\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"date (mm/dd/yyyy)\"\n              name=\"date\"\n              id=\"expenseDate\"\n              value={date}\n              onChange={handleDate}\n            />\n          </Col>\n          <Col size=\"3\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"expense name\"\n              name=\"name\"\n              id=\"expenseName\"\n              value={name}\n              onChange={handleName}\n            />\n          </Col>\n          <Col size=\"3\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"cost (US$)\"\n              name=\"amount\"\n              id=\"expenseAmount\"\n              value={amount}\n              onChange={handleAmount}\n            />\n          </Col>\n          <Col size=\"3\">\n            <button className=\"btn btn-success\" type=\"submit\">\n              Add <i className=\"fas fa-plus\"></i>\n            </button>\n          </Col>\n        </Row>\n      </form>\n    </Container>\n  );\n}\n\n// ==============================================================================\n\nexport default AddForm;\n","import React from \"react\";\nimport \"./style.css\";\n\n// ==============================================================================\n\nfunction SectionBreak() {\n    return (\n        <div>\n            <hr className=\"section-break\"></hr>\n        </div>\n    );\n}\n\n// ==============================================================================\n\nexport default SectionBreak;","import React from \"react\";\nimport \"./style.css\";\n\n// ==============================================================================\n\nfunction SectionSpacing() {\n    return (\n        <div>\n            <hr className=\"section-spacing\"></hr>\n        </div>\n    );\n}\n\n// ==============================================================================\n\nexport default SectionSpacing;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <div>\n      <footer className=\"page-footer fixed-bottom\">\n        <div className=\"footer-copyright\">\n          © 2020 Copyright:\n          <a className=\"link-name\" href=\"https://github.com/CrainDavis\"> Chyna Davis</a>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport BudgetTotals from \"./components/BudgetTotals\";\nimport SpendingTable from \"./components/SpendingTable\";\nimport AddForm from \"./components/AddForm\";\nimport SectionBreak from \"./components/SectionBreak\";\nimport SectionSpacing from \"./components/SectionSpacing\";\nimport Footer from \"./components/Footer\";\n\n// ==============================================================================\n\n// retrieve all previous expenses from local storage\nconst allExpenses = localStorage.getItem(\"stored-expenses\")\n  ? JSON.parse(localStorage.getItem(\"stored-expenses\"))\n  : [];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(allExpenses);\n  const [date, setDate] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  // store expenses in LocalStorage\n  useEffect(() => {\n    localStorage.setItem(\"stored-expenses\", JSON.stringify(expenses));\n  }, [expenses]);\n\n  // =================================\n\n  // entered date value\n  const handleDate = (event) => {\n    setDate(event.target.value);\n  };\n\n  // entered name (type of expense) value\n  const handleName = (event) => {\n    setName(event.target.value);\n  };\n\n  // entered amount (cost) value\n  const handleAmount = (event) => {\n    setAmount(event.target.value);\n  };\n\n  // for \"add expense\" button\n  const handleSubmitForm = (event) => {\n    event.preventDefault();\n\n    // make sure user has filled in all three fields\n    if (date !== \"\" && name !== \"\" && amount > 0) {\n      const expense = { date, name, amount };\n\n      setExpenses([...expenses, expense]);\n\n      // empty input field values\n      setDate(\"\");\n      setName(\"\");\n      setAmount(\"\");\n\n    } else {\n      // otherwise, console log message\n      console.log(\"invalid input\");\n    }\n  };\n\n  // \"clear expenses\" button; empty out LocalStorage\n  const handleClearExpenses = (event) => {\n    event.preventDefault();\n    setExpenses([]);\n  };\n\n  // =================================\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <AddForm\n          date={date}\n          name={name}\n          amount={amount}\n          handleDate={handleDate}\n          handleName={handleName}\n          handleAmount={handleAmount}\n          handleSubmitForm={handleSubmitForm}\n        />\n        <SectionBreak />\n        <BudgetTotals expenses={expenses} />\n        <SectionBreak />\n        <SpendingTable\n          expenses={expenses}\n          handleClearExpenses={handleClearExpenses}\n        />\n      </div>\n      <SectionSpacing />\n      <Footer />\n    </div>\n  );\n}\n\n// ==============================================================================\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}